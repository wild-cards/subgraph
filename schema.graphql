type Wildcard @entity {
  id: ID! # Just the tokenId
  tokenId: BigInt!
  price: Price!
  owner: Patron! # address
  patronageNumerator: BigInt!
  timeAcquired: BigInt!
  previousOwners: [PreviousPatron!]
  priceHistory: [Price!]
  tokenUri: TokenUri!
  # foreclosureTime: BigInt!
}

type TokenUri @entity {
  id: ID!
  uriString: String!
  # -- parsing of this needs to be done on the client-side. JSON parsing still seems difficult in assemblyscript: https://github.com/AssemblyScript/assemblyscript/issues/292
  # artist: String!
  # name: String!
  # type: String!
  # ipfs: String!
}

type Price @entity {
  id: ID!
  price: BigInt!
  timeSet: BigInt!
}

type PreviousPatron @entity {
  id: ID! 
  patron: Patron!
  timeAcquired: BigInt!
  timeSold: BigInt!
}

type Patron @entity {
  id: ID! # Just the address
  address: Bytes! # address
  lastUpdated: BigInt!
  previouslyOwnedTokens: [Wildcard!]
  tokens: [Wildcard!]
  # deposit: BigInt!
  # totalContributed: BigInt!
  # totalTimeHeld: BigInt!
}
