type Wildcard @entity {
  id: ID! # Just the tokenId
  tokenId: BigInt!
  price: BigInt!
  owner: Bytes! # address
  patronageNumerator: BigInt!
  timeAcquired: BigInt!
  previousOwners: [PreviousPatron!]
  # priceHistory: [Price!]
}

type Price @entity {
  id: ID!
  price: BigInt!
  timeSet: BigInt!
}

type PreviousPatron @entity {
  id: ID! 
  patron: Patron!
  timeAcquired: BigInt!
  timeSold: BigInt!
}

type Patron @entity {
  id: ID! # Just the address
  address: Bytes! # address
  # tokens: [Wildcard!]
  # deposit: BigInt!
  # totalContributed: BigInt!
  # totalTimeHeld: BigInt!
}

enum LinkOrderByInput {
  value_ASC
  value_DESC
}
# #Testing only:
# type Holder @entity {
#   id: ID!
#   # testArray: [Tester!]
#   testArray (orderBy: LinkOrderByInput): [Tester!]
# }


# type Tester @entity {
#   id: ID!
#   value: Int!
# }
